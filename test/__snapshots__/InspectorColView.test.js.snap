// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with minimal/default props 1`] = `
<div
  className="jsonschema-inspector-colview"
  tabIndex={-1}
>
  <InspectorColumn
    filteredItems={null}
    items={
      Object {
        "Item One": JsonSchema {
          "getFieldValue": [Function],
          "getProperties": [Function],
          "getPropertyParentSchemas": [Function],
          "getSchemaFieldValue": [Function],
          "getTypeOfArrayItems": [Function],
          "schema": undefined,
          "scope": RefScope {
            "addOtherScope": [Function],
            "addOtherScopes": [Function],
            "externalRefs": Object {},
            "find": [Function],
            "findSchemaInThisScope": [Function],
            "internalRefs": Object {},
            "otherScopes": Array [],
          },
        },
        "Item Two": JsonSchema {
          "getFieldValue": [Function],
          "getProperties": [Function],
          "getPropertyParentSchemas": [Function],
          "getSchemaFieldValue": [Function],
          "getTypeOfArrayItems": [Function],
          "schema": undefined,
          "scope": RefScope {
            "addOtherScope": [Function],
            "addOtherScopes": [Function],
            "externalRefs": Object {},
            "find": [Function],
            "findSchemaInThisScope": [Function],
            "internalRefs": Object {},
            "otherScopes": Array [],
          },
        },
      }
    }
    key="0"
    onSelect={[Function]}
    renderItemContent={null}
    selectedItem="Item One"
    trailingSelection={false}
  />
  <InspectorColumn
    filteredItems={null}
    items={
      Object {
        "Item One-One": JsonSchema {
          "getFieldValue": [Function],
          "getProperties": [Function],
          "getPropertyParentSchemas": [Function],
          "getSchemaFieldValue": [Function],
          "getTypeOfArrayItems": [Function],
          "schema": undefined,
          "scope": RefScope {
            "addOtherScope": [Function],
            "addOtherScopes": [Function],
            "externalRefs": Object {},
            "find": [Function],
            "findSchemaInThisScope": [Function],
            "internalRefs": Object {},
            "otherScopes": Array [],
          },
        },
        "Item One-Two": JsonSchema {
          "getFieldValue": [Function],
          "getProperties": [Function],
          "getPropertyParentSchemas": [Function],
          "getSchemaFieldValue": [Function],
          "getTypeOfArrayItems": [Function],
          "schema": undefined,
          "scope": RefScope {
            "addOtherScope": [Function],
            "addOtherScopes": [Function],
            "externalRefs": Object {},
            "find": [Function],
            "findSchemaInThisScope": [Function],
            "internalRefs": Object {},
            "otherScopes": Array [],
          },
        },
      }
    }
    key="1"
    onSelect={[Function]}
    renderItemContent={null}
    selectedItem="Item One-Two"
    trailingSelection={true}
  />
  <InspectorColumn
    filteredItems={null}
    items={
      Object {
        "Item One-Two-One": JsonSchema {
          "getFieldValue": [Function],
          "getProperties": [Function],
          "getPropertyParentSchemas": [Function],
          "getSchemaFieldValue": [Function],
          "getTypeOfArrayItems": [Function],
          "schema": undefined,
          "scope": RefScope {
            "addOtherScope": [Function],
            "addOtherScopes": [Function],
            "externalRefs": Object {},
            "find": [Function],
            "findSchemaInThisScope": [Function],
            "internalRefs": Object {},
            "otherScopes": Array [],
          },
        },
        "Item One-Two-Two": JsonSchema {
          "getFieldValue": [Function],
          "getProperties": [Function],
          "getPropertyParentSchemas": [Function],
          "getSchemaFieldValue": [Function],
          "getTypeOfArrayItems": [Function],
          "schema": undefined,
          "scope": RefScope {
            "addOtherScope": [Function],
            "addOtherScopes": [Function],
            "externalRefs": Object {},
            "find": [Function],
            "findSchemaInThisScope": [Function],
            "internalRefs": Object {},
            "otherScopes": Array [],
          },
        },
      }
    }
    key="2"
    onSelect={[Function]}
    renderItemContent={null}
    selectedItem={null}
    trailingSelection={false}
  />
</div>
`;
